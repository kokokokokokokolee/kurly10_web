깃허브_배포

배포 할 주소

리파지토리(=저장소) --- 원본 소스 저장소
https://github.com/kokokokokokokolee/kurly10.git

리파지토리(=저장소) --- 배포용
https://github.com/kokokokokokokolee/kurly10_web.git

아이디
avwds
이메일주소
avwds@naver.com
비밀번호
pollution97!

gitbash 실행

1. 깃허브에 설정
git init
--> 반투명한 .git 폴더 생성

2. 깃 환경설정
git config user.name 'avwds'
git config user.email 'avwds@naver.com'

3. 본인계정 확인 (제대로 들어갔는지 확인할 때)
git config user.name
git config user.email

4. 배포할 원격지 오리진 저장소 등록
git remote add origin https://github.com/kokokokokokokolee/kurly10.git

4-1 삭제
기본 리파지토리 오리진 삭제
git remote remove origin

그리고 다시 리모트 오리진
https://github.com/kokokokokokokolee/kurly10_web.git

5. 확인
git remote -v

원본용
origin  https://github.com/kokokokokokokolee/kurly10.git (fetch)
origin  https://github.com/kokokokokokokolee/kurly10.git (push)

배포용
origin  https://github.com/kokokokokokokolee/kurly10_web.git (fetch)
origin  https://github.com/kokokokokokokolee/kurly10_web.git (push)

6. staging 내가 올리고자 하는 모든 파일 선택
git add .

7. 커밋 최종 점검 (-m ==> 메세지)
git commit -m '쇼핑몰 마켓컬리 원본 소스 파일'

8. 푸쉬 최종 올리기
git push origin master

9. 깃허브 푸쉬한 저장소에서 새로고침 

10. 아래로 스크롤 해보면 Deployment
    URL 주소 클릭 이동
    https://facebook.github.io/create-react-app/docs/deployment

11. Deployment 사이트에서 한참 내려간다

12. GitHub Pages를 검색

13. 배포할 홈페이지 주소를 패키지 제이슨에 추가한다

    Step 1: Add homepage to package.json

    Settings => pages => GitHub Pages => 아래 Branch에 none 클릭 => master => save => 1분에서 3분 정도 대기 후 새로고침 배포주소 보인다
    https://kokokokokokokolee.github.io/kurly10/ (이게 진짜 배포주소, 이름 수정해야겠다 ;; )

                                        / 리파지토리 이름
    "homepage": "https://avwds.github.io/kurly10"
    "homepage": "https://kokokokokokokolee.github.io/kurly10"

  이 주소가 맞는지 안 맞는지 확인 하는 절차

  배포주소 
  https://github.com/kokokokokokokolee/kurly10_web.git

  "homepage":"https://github.com/kokokokokokokolee/kurly10_web"

  
14. 홈페이지 주소를 package.json 안에 주소 추가한다.
      마지막 중괄호 위에 핑크랑 노랑 사이에 홈페이지 주소 추가.
      , 꼭 써야 함!

    :
        "development": [
        "last 1 chrome version",
        "last 1 firefox version",
        "last 1 safari version"
        ]
    },
    "homepage": "https://kokokokokokokolee.github.io/kurly10"
    }

15. 설치 gh-pages
    Step 2: Install gh-pages and add deploy to scripts in package.json (얘가 없으면 배포 안 됨)

    npm install --save gh-pages (옛날 방식)
    npm i gh-pages (요즘 방식)
    or
    npm install --save gh-pages
    이게 있어야 build 시킬 수 있음


16. package.json 디펜던시(dependencies) 확인

     "gh-pages": "^6.0.0",



17. package.json

    "scripts": {

        "predeploy": "npm run build",
        "deploy": "gh-pages -b master -d build",


        

18. Step 3: Deploy the site by running npm run deploy

    npm run deploy 얘가 predeploy, deploy 얘네 실행해줌

    npm run deploy


    Published 뜨면 성공 ~~~ 


    > kurly@0.1.0 deploy
    > gh-pages -b master -d build

    Published

19. github에서 새로고침
    그러면 모두 배포판으로 변경 된 걸 볼 수 있다

    scr가 static으로 바뀌고, index.html이 노출 됨

20. Settings

21. pages 

22. GitHub Pages 들어가서 3분 정도 기다리고

    visit Site => 클릭
    홈페이지 나타남 !



    a만약 새로 다시 올려야 해서 기존 거 삭제하려면 setting 맨 아래 delete this repository 

    그리고 git add .부터
    git push origin master까지 하고

    npm run deploy (왜냐면 직전에 package.json에 입력 다 해둬서)
    publish 떴으면 깃허브 가서 파일 변한 거 확인(static, index.html)
    그리고 setting => pages => branch에서 master 변경하고 save

    집에서 kurly_1, 2, 3 세 번 정도 혼자 해보기